{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 15, "column": 0}, "map": {"version":3,"sources":["file:///Users/sojimmynea/Developer/js-project/keyboard-customizer-next/src/lib/utils.ts"],"sourcesContent":["import { clsx, type ClassValue } from 'clsx'\nimport { twMerge } from 'tailwind-merge'\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,CAAA,GAAA,yNAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,sLAAA,CAAA,OAAI,AAAD,EAAE;AACtB","debugId":null}},
    {"offset": {"line": 31, "column": 0}, "map": {"version":3,"sources":["file:///Users/sojimmynea/Developer/js-project/keyboard-customizer-next/src/components/ui/button.tsx"],"sourcesContent":["import * as React from 'react'\nimport { Slot } from '@radix-ui/react-slot'\nimport { cva, type VariantProps } from 'class-variance-authority'\n\nimport { cn } from '@/lib/utils'\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium transition-all disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg:not([class*='size-'])]:size-4 shrink-0 [&_svg]:shrink-0 outline-none focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px] aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive\",\n  {\n    variants: {\n      variant: {\n        default:\n          'bg-primary text-primary-foreground shadow-xs hover:bg-primary/90',\n        destructive:\n          'bg-destructive text-white shadow-xs hover:bg-destructive/90 focus-visible:ring-destructive/20 dark:focus-visible:ring-destructive/40 dark:bg-destructive/60',\n        outline:\n          'border bg-background shadow-xs hover:bg-accent hover:text-accent-foreground dark:bg-input/30 dark:border-input dark:hover:bg-input/50',\n        secondary:\n          'bg-secondary text-secondary-foreground shadow-xs hover:bg-secondary/80',\n        ghost:\n          'hover:bg-accent hover:text-accent-foreground dark:hover:bg-accent/50',\n        link: 'text-primary underline-offset-4 hover:underline',\n      },\n      size: {\n        default: 'h-9 px-4 py-2 has-[>svg]:px-3',\n        sm: 'h-8 rounded-md gap-1.5 px-3 has-[>svg]:px-2.5',\n        lg: 'h-10 rounded-md px-6 has-[>svg]:px-4',\n        icon: 'size-9',\n      },\n    },\n    defaultVariants: {\n      variant: 'default',\n      size: 'default',\n    },\n  }\n)\n\nfunction Button({\n  className,\n  variant,\n  size,\n  asChild = false,\n  ...props\n}: React.ComponentProps<'button'> &\n  VariantProps<typeof buttonVariants> & {\n    asChild?: boolean\n  }) {\n  const Comp = asChild ? Slot : 'button'\n\n  return (\n    <Comp\n      data-slot=\"button\"\n      className={cn(buttonVariants({ variant, size, className }))}\n      {...props}\n    />\n  )\n}\n\nexport { Button, buttonVariants }\n"],"names":[],"mappings":";;;;;AACA;AACA;AAEA;;;;;AAEA,MAAM,iBAAiB,CAAA,GAAA,2OAAA,CAAA,MAAG,AAAD,EACvB,+bACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,aACE;YACF,SACE;YACF,WACE;YACF,OACE;YACF,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AAGF,SAAS,OAAO,EACd,SAAS,EACT,OAAO,EACP,IAAI,EACJ,UAAU,KAAK,EACf,GAAG,OAIF;IACD,MAAM,OAAO,UAAU,oSAAA,CAAA,OAAI,GAAG;IAE9B,qBACE,6WAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,eAAe;YAAE;YAAS;YAAM;QAAU;QACvD,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 88, "column": 0}, "map": {"version":3,"sources":["file:///Users/sojimmynea/Developer/js-project/keyboard-customizer-next/src/components/ui/card.tsx"],"sourcesContent":["import * as React from 'react'\n\nimport { cn } from '@/lib/utils'\n\nfunction Card({ className, ...props }: React.ComponentProps<'div'>) {\n  return (\n    <div\n      data-slot=\"card\"\n      className={cn(\n        'bg-card text-card-foreground flex flex-col gap-6 rounded-xl border py-6 shadow-sm',\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardHeader({ className, ...props }: React.ComponentProps<'div'>) {\n  return (\n    <div\n      data-slot=\"card-header\"\n      className={cn(\n        '@container/card-header grid auto-rows-min grid-rows-[auto_auto] items-start gap-1.5 px-6 has-data-[slot=card-action]:grid-cols-[1fr_auto] [.border-b]:pb-6',\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardTitle({ className, ...props }: React.ComponentProps<'div'>) {\n  return (\n    <div\n      data-slot=\"card-title\"\n      className={cn('leading-none font-semibold', className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardDescription({ className, ...props }: React.ComponentProps<'div'>) {\n  return (\n    <div\n      data-slot=\"card-description\"\n      className={cn('text-muted-foreground text-sm', className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardAction({ className, ...props }: React.ComponentProps<'div'>) {\n  return (\n    <div\n      data-slot=\"card-action\"\n      className={cn(\n        'col-start-2 row-span-2 row-start-1 self-start justify-self-end',\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardContent({ className, ...props }: React.ComponentProps<'div'>) {\n  return (\n    <div\n      data-slot=\"card-content\"\n      className={cn('px-6', className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardFooter({ className, ...props }: React.ComponentProps<'div'>) {\n  return (\n    <div\n      data-slot=\"card-footer\"\n      className={cn('flex items-center px-6 [.border-t]:pt-6', className)}\n      {...props}\n    />\n  )\n}\n\nexport {\n  Card,\n  CardHeader,\n  CardFooter,\n  CardTitle,\n  CardAction,\n  CardDescription,\n  CardContent,\n}\n"],"names":[],"mappings":";;;;;;;;;;AAEA;;;AAEA,SAAS,KAAK,EAAE,SAAS,EAAE,GAAG,OAAoC;IAChE,qBACE,6WAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,qFACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,6WAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,8JACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,UAAU,EAAE,SAAS,EAAE,GAAG,OAAoC;IACrE,qBACE,6WAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,gBAAgB,EAAE,SAAS,EAAE,GAAG,OAAoC;IAC3E,qBACE,6WAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,6WAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,kEACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,YAAY,EAAE,SAAS,EAAE,GAAG,OAAoC;IACvE,qBACE,6WAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,QAAQ;QACrB,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,6WAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,2CAA2C;QACxD,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 185, "column": 0}, "map": {"version":3,"sources":["file:///Users/sojimmynea/Developer/js-project/keyboard-customizer-next/src/components/ui/input.tsx"],"sourcesContent":["import * as React from 'react'\n\nimport { cn } from '@/lib/utils'\n\nfunction Input({ className, type, ...props }: React.ComponentProps<'input'>) {\n  return (\n    <input\n      type={type}\n      data-slot=\"input\"\n      className={cn(\n        'file:text-foreground placeholder:text-muted-foreground selection:bg-primary selection:text-primary-foreground dark:bg-input/30 border-input flex h-9 w-full min-w-0 rounded-md border bg-transparent px-3 py-1 text-base shadow-xs transition-[color,box-shadow] outline-none file:inline-flex file:h-7 file:border-0 file:bg-transparent file:text-sm file:font-medium disabled:pointer-events-none disabled:cursor-not-allowed disabled:opacity-50 md:text-sm',\n        'focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px]',\n        'aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive',\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nexport { Input }\n"],"names":[],"mappings":";;;;AAEA;;;AAEA,SAAS,MAAM,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,OAAsC;IACzE,qBACE,6WAAC;QACC,MAAM;QACN,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,mcACA,iFACA,0GACA;QAED,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 211, "column": 0}, "map": {"version":3,"sources":["file:///Users/sojimmynea/Developer/js-project/keyboard-customizer-next/src/components/ui/label.tsx"],"sourcesContent":["'use client'\n\nimport * as React from 'react'\nimport * as LabelPrimitive from '@radix-ui/react-label'\n\nimport { cn } from '@/lib/utils'\n\nfunction Label({\n  className,\n  ...props\n}: React.ComponentProps<typeof LabelPrimitive.Root>) {\n  return (\n    <LabelPrimitive.Root\n      data-slot=\"label\"\n      className={cn(\n        'flex items-center gap-2 text-sm leading-none font-medium select-none group-data-[disabled=true]:pointer-events-none group-data-[disabled=true]:opacity-50 peer-disabled:cursor-not-allowed peer-disabled:opacity-50',\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nexport { Label }\n"],"names":[],"mappings":";;;;AAGA;AAEA;AALA;;;;AAOA,SAAS,MAAM,EACb,SAAS,EACT,GAAG,OAC8C;IACjD,qBACE,6WAAC,qXAAA,CAAA,OAAmB;QAClB,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,uNACA;QAED,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 239, "column": 0}, "map": {"version":3,"sources":["file:///Users/sojimmynea/Developer/js-project/keyboard-customizer-next/src/components/ui/select.tsx"],"sourcesContent":["'use client'\n\nimport * as React from 'react'\nimport * as SelectPrimitive from '@radix-ui/react-select'\nimport { CheckIcon, ChevronDownIcon, ChevronUpIcon } from 'lucide-react'\n\nimport { cn } from '@/lib/utils'\n\nfunction Select({\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Root>) {\n  return <SelectPrimitive.Root data-slot=\"select\" {...props} />\n}\n\nfunction SelectGroup({\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Group>) {\n  return <SelectPrimitive.Group data-slot=\"select-group\" {...props} />\n}\n\nfunction SelectValue({\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Value>) {\n  return <SelectPrimitive.Value data-slot=\"select-value\" {...props} />\n}\n\nfunction SelectTrigger({\n  className,\n  size = 'default',\n  children,\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Trigger> & {\n  size?: 'sm' | 'default'\n}) {\n  return (\n    <SelectPrimitive.Trigger\n      data-slot=\"select-trigger\"\n      data-size={size}\n      className={cn(\n        \"border-input data-[placeholder]:text-muted-foreground [&_svg:not([class*='text-'])]:text-muted-foreground focus-visible:border-ring focus-visible:ring-ring/50 aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive dark:bg-input/30 dark:hover:bg-input/50 flex w-fit items-center justify-between gap-2 rounded-md border bg-transparent px-3 py-2 text-sm whitespace-nowrap shadow-xs transition-[color,box-shadow] outline-none focus-visible:ring-[3px] disabled:cursor-not-allowed disabled:opacity-50 data-[size=default]:h-9 data-[size=sm]:h-8 *:data-[slot=select-value]:line-clamp-1 *:data-[slot=select-value]:flex *:data-[slot=select-value]:items-center *:data-[slot=select-value]:gap-2 [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <SelectPrimitive.Icon asChild>\n        <ChevronDownIcon className=\"size-4 opacity-50\" />\n      </SelectPrimitive.Icon>\n    </SelectPrimitive.Trigger>\n  )\n}\n\nfunction SelectContent({\n  className,\n  children,\n  position = 'popper',\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Content>) {\n  return (\n    <SelectPrimitive.Portal>\n      <SelectPrimitive.Content\n        data-slot=\"select-content\"\n        className={cn(\n          'bg-popover text-popover-foreground data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 relative z-50 max-h-(--radix-select-content-available-height) min-w-[8rem] origin-(--radix-select-content-transform-origin) overflow-x-hidden overflow-y-auto rounded-md border shadow-md',\n          position === 'popper' &&\n            'data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1',\n          className\n        )}\n        position={position}\n        {...props}\n      >\n        <SelectScrollUpButton />\n        <SelectPrimitive.Viewport\n          className={cn(\n            'p-1',\n            position === 'popper' &&\n              'h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)] scroll-my-1'\n          )}\n        >\n          {children}\n        </SelectPrimitive.Viewport>\n        <SelectScrollDownButton />\n      </SelectPrimitive.Content>\n    </SelectPrimitive.Portal>\n  )\n}\n\nfunction SelectLabel({\n  className,\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Label>) {\n  return (\n    <SelectPrimitive.Label\n      data-slot=\"select-label\"\n      className={cn('text-muted-foreground px-2 py-1.5 text-xs', className)}\n      {...props}\n    />\n  )\n}\n\nfunction SelectItem({\n  className,\n  children,\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Item>) {\n  return (\n    <SelectPrimitive.Item\n      data-slot=\"select-item\"\n      className={cn(\n        \"focus:bg-accent focus:text-accent-foreground [&_svg:not([class*='text-'])]:text-muted-foreground relative flex w-full cursor-default items-center gap-2 rounded-sm py-1.5 pr-8 pl-2 text-sm outline-hidden select-none data-[disabled]:pointer-events-none data-[disabled]:opacity-50 [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4 *:[span]:last:flex *:[span]:last:items-center *:[span]:last:gap-2\",\n        className\n      )}\n      {...props}\n    >\n      <span className=\"absolute right-2 flex size-3.5 items-center justify-center\">\n        <SelectPrimitive.ItemIndicator>\n          <CheckIcon className=\"size-4\" />\n        </SelectPrimitive.ItemIndicator>\n      </span>\n      <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\n    </SelectPrimitive.Item>\n  )\n}\n\nfunction SelectSeparator({\n  className,\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Separator>) {\n  return (\n    <SelectPrimitive.Separator\n      data-slot=\"select-separator\"\n      className={cn('bg-border pointer-events-none -mx-1 my-1 h-px', className)}\n      {...props}\n    />\n  )\n}\n\nfunction SelectScrollUpButton({\n  className,\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.ScrollUpButton>) {\n  return (\n    <SelectPrimitive.ScrollUpButton\n      data-slot=\"select-scroll-up-button\"\n      className={cn(\n        'flex cursor-default items-center justify-center py-1',\n        className\n      )}\n      {...props}\n    >\n      <ChevronUpIcon className=\"size-4\" />\n    </SelectPrimitive.ScrollUpButton>\n  )\n}\n\nfunction SelectScrollDownButton({\n  className,\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.ScrollDownButton>) {\n  return (\n    <SelectPrimitive.ScrollDownButton\n      data-slot=\"select-scroll-down-button\"\n      className={cn(\n        'flex cursor-default items-center justify-center py-1',\n        className\n      )}\n      {...props}\n    >\n      <ChevronDownIcon className=\"size-4\" />\n    </SelectPrimitive.ScrollDownButton>\n  )\n}\n\nexport {\n  Select,\n  SelectContent,\n  SelectGroup,\n  SelectItem,\n  SelectLabel,\n  SelectScrollDownButton,\n  SelectScrollUpButton,\n  SelectSeparator,\n  SelectTrigger,\n  SelectValue,\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 464, "column": 0}, "map": {"version":3,"sources":["file:///Users/sojimmynea/Developer/js-project/keyboard-customizer-next/src/hooks/useKeyboardStyleApplier.ts"],"sourcesContent":["import { Dispatch, SetStateAction, useEffect, useState } from 'react'\n\nexport const useKeyboardStyleApplier = (\n  setType: Dispatch<SetStateAction<'image' | 'color'>>\n) => {\n  const [frameColor, setFrameColor] = useState('#000000')\n  const [fontColor, setFontColor] = useState('#000000')\n  const [color, setColor] = useState('#ffffff')\n  const [image, setImage] = useState<string | undefined>(undefined)\n\n  // useEffect(() => {\n  //   setType('image')\n  // }, [image])\n  //\n  // useEffect(() => {\n  //   setType('color')\n  // }, [color])\n\n  return {\n    color,\n    setColor,\n    image,\n    setImage,\n    frameColor,\n    setFrameColor,\n    fontColor,\n    setFontColor,\n  }\n}\n"],"names":[],"mappings":";;;AAAA;;AAEO,MAAM,0BAA0B,CACrC;IAEA,MAAM,CAAC,YAAY,cAAc,GAAG,CAAA,GAAA,oUAAA,CAAA,WAAQ,AAAD,EAAE;IAC7C,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,oUAAA,CAAA,WAAQ,AAAD,EAAE;IAC3C,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,oUAAA,CAAA,WAAQ,AAAD,EAAE;IACnC,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,oUAAA,CAAA,WAAQ,AAAD,EAAsB;IAEvD,oBAAoB;IACpB,qBAAqB;IACrB,cAAc;IACd,EAAE;IACF,oBAAoB;IACpB,qBAAqB;IACrB,cAAc;IAEd,OAAO;QACL;QACA;QACA;QACA;QACA;QACA;QACA;QACA;IACF;AACF","debugId":null}},
    {"offset": {"line": 498, "column": 0}, "map": {"version":3,"sources":["file:///Users/sojimmynea/Developer/js-project/keyboard-customizer-next/src/hooks/useLocalStorage.ts"],"sourcesContent":["'use client'\n\nimport { CustomizeValue } from '@/interfaces'\n\nexport const useLocalStorage = () => {\n  const loadColorFromStorage = (): CustomizeValue => {\n    if (typeof window === 'undefined') {\n      return {\n        frame: '#000000',\n        font: '#000000',\n        keycap: '#ffffff',\n        image: null,\n      }\n    }\n\n    return {\n      frame: window.localStorage.getItem('frame') || '#000000',\n      font: window.localStorage.getItem('font') || '#000000',\n      keycap: window.localStorage.getItem('keycap') || '#ffffff',\n      image: window.localStorage.getItem('image')\n    }\n  }\n\n  const setColorIntoStorage = (key: 'frame' | 'font' | 'keycap' | 'image', value: string | null) => {\n    if (typeof window === 'undefined' || value === null) return\n\n    if (value === null) {\n      return\n    }\n    window.localStorage.setItem(key, value)\n  }\n\n\n  return {\n    loadColorFromStorage,\n    setColorIntoStorage,\n  }\n}\n"],"names":[],"mappings":";;;AAAA;AAIO,MAAM,kBAAkB;IAC7B,MAAM,uBAAuB;QAC3B,wCAAmC;YACjC,OAAO;gBACL,OAAO;gBACP,MAAM;gBACN,QAAQ;gBACR,OAAO;YACT;QACF;;IAQF;IAEA,MAAM,sBAAsB,CAAC,KAA4C;QACvE,wCAAqD;;IAMvD;IAGA,OAAO;QACL;QACA;IACF;AACF","debugId":null}},
    {"offset": {"line": 529, "column": 0}, "map": {"version":3,"sources":["file:///Users/sojimmynea/Developer/js-project/keyboard-customizer-next/src/hooks/useColorPicker.ts"],"sourcesContent":["import { CustomizeType, CustomizeValue } from '@/interfaces'\nimport { useState } from 'react'\n\nexport const useColorPicker = (\n  customizeType: CustomizeType,\n  customizer: CustomizeValue\n) => {\n  const frameState = useState(customizer.frame)\n  const fontState = useState(customizer.font)\n  const keycapState = useState(customizer.keycap)\n\n  if (customizeType === 'font') {\n    return fontState\n  } else if (customizeType === 'frame') {\n    return frameState\n  }\n  return keycapState\n}\n"],"names":[],"mappings":";;;AACA;;AAEO,MAAM,iBAAiB,CAC5B,eACA;IAEA,MAAM,aAAa,CAAA,GAAA,oUAAA,CAAA,WAAQ,AAAD,EAAE,WAAW,KAAK;IAC5C,MAAM,YAAY,CAAA,GAAA,oUAAA,CAAA,WAAQ,AAAD,EAAE,WAAW,IAAI;IAC1C,MAAM,cAAc,CAAA,GAAA,oUAAA,CAAA,WAAQ,AAAD,EAAE,WAAW,MAAM;IAE9C,IAAI,kBAAkB,QAAQ;QAC5B,OAAO;IACT,OAAO,IAAI,kBAAkB,SAAS;QACpC,OAAO;IACT;IACA,OAAO;AACT","debugId":null}},
    {"offset": {"line": 551, "column": 0}, "map": {"version":3,"sources":["file:///Users/sojimmynea/Developer/js-project/keyboard-customizer-next/src/hooks/index.ts"],"sourcesContent":["export * from './useKeyboardStyleApplier'\nexport * from './useLocalStorage'\nexport * from './useColorPicker'\n"],"names":[],"mappings":";AAAA;AACA;AACA","debugId":null}},
    {"offset": {"line": 575, "column": 0}, "map": {"version":3,"sources":["file:///Users/sojimmynea/Developer/js-project/keyboard-customizer-next/src/components/color-picker.tsx"],"sourcesContent":["'use client'\n\nimport { RefObject, useRef, useState } from 'react'\nimport { Copy, Check } from 'lucide-react'\n\nimport { Button } from '@/components/ui/button'\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card'\nimport { Input } from '@/components/ui/input'\nimport { Label } from '@/components/ui/label'\nimport {\n  Select,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n} from './ui/select'\nimport { CustomizeType, CustomizeValue } from '@/interfaces'\nimport { useColorPicker, useLocalStorage } from '@/hooks'\nimport { KeyboardLayoutRef } from './keyboard'\n\nconst presetColors = [\n  '#FF6B6B',\n  '#4ECDC4',\n  '#45B7D1',\n  '#96CEB4',\n  '#FFEAA7',\n  '#DDA0DD',\n  '#98D8C8',\n  '#F7DC6F',\n  '#BB8FCE',\n  '#85C1E9',\n  '#F8C471',\n  '#82E0AA',\n  '#F1948A',\n  '#85C1E9',\n  '#D7BDE2',\n]\n\nconst CUSTOMIZE_TYPES: { id: CustomizeType; text: string }[] = [\n  {\n    id: 'keycap',\n    text: 'Keycap',\n  },\n  {\n    id: 'font',\n    text: 'Font',\n  },\n  {\n    id: 'frame',\n    text: 'Frame',\n  },\n]\n\n// TODO: Return all styles to be applied to keyboard, do not update all the time since it's causing rendering issue. only update when Apply button is clicked\n//\n\nexport const ColorPicker = ({\n  keyboardLayoutRef,\n}: {\n  keyboardLayoutRef: RefObject<KeyboardLayoutRef | null>\n}) => {\n  const {\n    loadColorFromStorage,\n    setColorIntoStorage,\n  } = useLocalStorage()\n  const customizeValue = loadColorFromStorage();\n  const debounceTimeoutRef = useRef<NodeJS.Timeout | null>(null)\n\n  console.log('customizeValue', customizeValue)\n\n  // const [customizer, setCustomizer] = useState<CustomizeValue>({\n  //   font: '#000000',\n  //   frame: '#000000',\n  //   keycap: '#ffffff',\n  //   image: null,\n  // })\n  const [customizeType, setCustomizeType] = useState<CustomizeType>('keycap')\n  const [selectedColor, setSelectedColor] = useColorPicker(\n    customizeType,\n    customizeValue,\n  )\n  const [image, setImage] = useState<string | null>(customizeValue.image)\n  const [copied, setCopied] = useState(false)\n\n  const handleColorChange = (color: string) => {\n    setSelectedColor(color)\n    if (keyboardLayoutRef.current) {\n      if (customizeType === 'frame') {\n        keyboardLayoutRef.current.setFrameColor(color)\n      } else if (customizeType === 'font') {\n        keyboardLayoutRef.current.setFontColor(color)\n      } else {\n        keyboardLayoutRef.current.setKeycapColor(color)\n      }\n    }\n    if (debounceTimeoutRef.current) {\n      clearTimeout(debounceTimeoutRef.current)\n    }\n\n    debounceTimeoutRef.current = setTimeout(() => {\n      setColorIntoStorage(customizeType, color)\n    }, 300)\n  }\n\n  const handleImageChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const file = e.target.files?.[0]\n    if (file) {\n      const imageUrl = URL.createObjectURL(file)\n      setImage(imageUrl)\n      if (keyboardLayoutRef.current) {\n        keyboardLayoutRef.current.setImage(imageUrl)\n      }\n    }\n  }\n\n  const copyToClipboard = async () => {\n    try {\n      await navigator.clipboard.writeText(selectedColor)\n      setCopied(true)\n      setTimeout(() => setCopied(false), 2000)\n    } catch (err) {\n      console.error('Failed to copy: ', err)\n    }\n  }\n\n  const hexToRgb = (hex: string) => {\n    const result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex)\n    return result\n      ? {\n          r: Number.parseInt(result[1], 16),\n          g: Number.parseInt(result[2], 16),\n          b: Number.parseInt(result[3], 16),\n        }\n      : null\n  }\n\n  console.log('selectedColor', selectedColor)\n  const rgb = hexToRgb(selectedColor)\n\n  if (typeof window === 'undefined') {\n    console.log('shit')\n    return <div>Hello</div>\n  }\n\n  return (\n    <div className=\"mx-10 p-6 space-y-6 w-[500px]\">\n      <Card>\n        <CardHeader>\n          <CardTitle>Color Picker</CardTitle>\n        </CardHeader>\n        <CardContent className=\"space-y-6\">\n          {/* Type */}\n          <div className=\"space-y-2\">\n            <Select\n              onValueChange={(val: CustomizeType) => setCustomizeType(val)}\n              defaultValue={customizeType}\n            >\n              <SelectTrigger className=\"w-full\">\n                <SelectValue placeholder=\"Theme\" />\n              </SelectTrigger>\n              <SelectContent>\n                {CUSTOMIZE_TYPES.map(type => (\n                  <SelectItem key={type.id} value={type.id}>\n                    {type.text}\n                  </SelectItem>\n                ))}\n              </SelectContent>\n            </Select>\n          </div>\n\n          {/* Color Preview */}\n          <div className=\"space-y-2\">\n            <Label>Selected Color</Label>\n            <div\n              className=\"w-full h-24 rounded-lg border-2 border-gray-200 shadow-inner\"\n              style={{ backgroundColor: selectedColor }}\n            />\n          </div>\n\n          {/* Native Color Picker */}\n          <div className=\"space-y-2\">\n            <Label htmlFor=\"color-input\">Pick a Color</Label>\n            <input\n              id=\"color-input\"\n              type=\"color\"\n              value={selectedColor}\n              onChange={e => handleColorChange(e.target.value)}\n              className=\"w-full h-12 rounded-md border border-gray-300 cursor-pointer\"\n            />\n          </div>\n\n          {/* Hex Input */}\n          <div className=\"space-y-2\">\n            <Label htmlFor=\"hex-input\">Hex Value</Label>\n            <div className=\"flex gap-2\">\n              <Input\n                id=\"hex-input\"\n                type=\"text\"\n                value={selectedColor}\n                onChange={e => {\n                  const value = e.target.value\n                  if (/^#[0-9A-F]{6}$/i.test(value) || value === '#') {\n                    handleColorChange(value)\n                  }\n                }}\n                placeholder=\"#000000\"\n                className=\"font-mono\"\n              />\n              <Button\n                variant=\"outline\"\n                size=\"icon\"\n                onClick={copyToClipboard}\n                className=\"shrink-0\"\n              >\n                {copied ? (\n                  <Check className=\"h-4 w-4 text-green-600\" />\n                ) : (\n                  <Copy className=\"h-4 w-4\" />\n                )}\n              </Button>\n            </div>\n          </div>\n\n          {/* RGB Values */}\n          {rgb && (\n            <div className=\"space-y-2\">\n              <Label>RGB Values</Label>\n              <div className=\"grid grid-cols-3 gap-2 text-sm\">\n                <div className=\"text-center p-2 bg-red-50 rounded\">\n                  <div className=\"font-semibold text-red-600\">R</div>\n                  <div>{rgb.r}</div>\n                </div>\n                <div className=\"text-center p-2 bg-green-50 rounded\">\n                  <div className=\"font-semibold text-green-600\">G</div>\n                  <div>{rgb.g}</div>\n                </div>\n                <div className=\"text-center p-2 bg-blue-50 rounded\">\n                  <div className=\"font-semibold text-blue-600\">B</div>\n                  <div>{rgb.b}</div>\n                </div>\n              </div>\n            </div>\n          )}\n\n          {/* Preset Colors */}\n          <div className=\"space-y-2\">\n            <Label>Preset Colors</Label>\n            <div className=\"grid grid-cols-5 gap-2\">\n              {presetColors.map((color, index) => (\n                <button\n                  key={index}\n                  className={`w-10 h-10 rounded-md border-2 transition-all hover:scale-110 ${\n                    selectedColor === color\n                      ? 'border-gray-800 shadow-lg'\n                      : 'border-gray-200 hover:border-gray-400'\n                  }`}\n                  style={{ backgroundColor: color }}\n                  onClick={() => handleColorChange(color)}\n                  aria-label={`Select color ${color}`}\n                />\n              ))}\n            </div>\n          </div>\n\n          {customizeType === 'keycap' ? (\n            <div className=\"space-y-2\">\n              <Label htmlFor=\"image\" className=\"font-medium text-gray-700\">\n                Image:\n              </Label>\n              <div>\n                <input\n                  type=\"file\"\n                  id=\"image\"\n                  onChange={handleImageChange}\n                  className=\"block w-full text-sm text-gray-600\n                  file:mr-4 file:py-2 file:px-4\n                  file:rounded-full file:border-0\n                  file:text-sm file:font-semibold\n                  file:bg-blue-50 file:text-blue-700\n                  hover:file:bg-blue-100\"\n                />\n              </div>\n            </div>\n          ) : null}\n        </CardContent>\n      </Card>\n    </div>\n  )\n}\n"],"names":[],"mappings":";;;;AAEA;AAGA;AACA;AACA;AACA;AACA;AAQA;AAAA;AAAA;AAjBA;;;;;;;;;;AAoBA,MAAM,eAAe;IACnB;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;CACD;AAED,MAAM,kBAAyD;IAC7D;QACE,IAAI;QACJ,MAAM;IACR;IACA;QACE,IAAI;QACJ,MAAM;IACR;IACA;QACE,IAAI;QACJ,MAAM;IACR;CACD;AAKM,MAAM,cAAc,CAAC,EAC1B,iBAAiB,EAGlB;IACC,MAAM,EACJ,oBAAoB,EACpB,mBAAmB,EACpB,GAAG,CAAA,GAAA,+HAAA,CAAA,kBAAe,AAAD;IAClB,MAAM,iBAAiB;IACvB,MAAM,qBAAqB,CAAA,GAAA,oUAAA,CAAA,SAAM,AAAD,EAAyB;IAEzD,QAAQ,GAAG,CAAC,kBAAkB;IAE9B,iEAAiE;IACjE,qBAAqB;IACrB,sBAAsB;IACtB,uBAAuB;IACvB,iBAAiB;IACjB,KAAK;IACL,MAAM,CAAC,eAAe,iBAAiB,GAAG,CAAA,GAAA,oUAAA,CAAA,WAAQ,AAAD,EAAiB;IAClE,MAAM,CAAC,eAAe,iBAAiB,GAAG,CAAA,GAAA,8HAAA,CAAA,iBAAc,AAAD,EACrD,eACA;IAEF,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,oUAAA,CAAA,WAAQ,AAAD,EAAiB,eAAe,KAAK;IACtE,MAAM,CAAC,QAAQ,UAAU,GAAG,CAAA,GAAA,oUAAA,CAAA,WAAQ,AAAD,EAAE;IAErC,MAAM,oBAAoB,CAAC;QACzB,iBAAiB;QACjB,IAAI,kBAAkB,OAAO,EAAE;YAC7B,IAAI,kBAAkB,SAAS;gBAC7B,kBAAkB,OAAO,CAAC,aAAa,CAAC;YAC1C,OAAO,IAAI,kBAAkB,QAAQ;gBACnC,kBAAkB,OAAO,CAAC,YAAY,CAAC;YACzC,OAAO;gBACL,kBAAkB,OAAO,CAAC,cAAc,CAAC;YAC3C;QACF;QACA,IAAI,mBAAmB,OAAO,EAAE;YAC9B,aAAa,mBAAmB,OAAO;QACzC;QAEA,mBAAmB,OAAO,GAAG,WAAW;YACtC,oBAAoB,eAAe;QACrC,GAAG;IACL;IAEA,MAAM,oBAAoB,CAAC;QACzB,MAAM,OAAO,EAAE,MAAM,CAAC,KAAK,EAAE,CAAC,EAAE;QAChC,IAAI,MAAM;YACR,MAAM,WAAW,IAAI,eAAe,CAAC;YACrC,SAAS;YACT,IAAI,kBAAkB,OAAO,EAAE;gBAC7B,kBAAkB,OAAO,CAAC,QAAQ,CAAC;YACrC;QACF;IACF;IAEA,MAAM,kBAAkB;QACtB,IAAI;YACF,MAAM,UAAU,SAAS,CAAC,SAAS,CAAC;YACpC,UAAU;YACV,WAAW,IAAM,UAAU,QAAQ;QACrC,EAAE,OAAO,KAAK;YACZ,QAAQ,KAAK,CAAC,oBAAoB;QACpC;IACF;IAEA,MAAM,WAAW,CAAC;QAChB,MAAM,SAAS,4CAA4C,IAAI,CAAC;QAChE,OAAO,SACH;YACE,GAAG,OAAO,QAAQ,CAAC,MAAM,CAAC,EAAE,EAAE;YAC9B,GAAG,OAAO,QAAQ,CAAC,MAAM,CAAC,EAAE,EAAE;YAC9B,GAAG,OAAO,QAAQ,CAAC,MAAM,CAAC,EAAE,EAAE;QAChC,IACA;IACN;IAEA,QAAQ,GAAG,CAAC,iBAAiB;IAC7B,MAAM,MAAM,SAAS;IAErB,wCAAmC;QACjC,QAAQ,GAAG,CAAC;QACZ,qBAAO,6WAAC;sBAAI;;;;;;IACd;;AAkJF","debugId":null}},
    {"offset": {"line": 709, "column": 0}, "map": {"version":3,"sources":["file:///Users/sojimmynea/Developer/js-project/keyboard-customizer-next/src/components/customizer.tsx"],"sourcesContent":["import { setState } from 'react'\nimport { Dispatch, SetStateAction } from 'react'\nimport { Card, CardContent, CardHeader, CardTitle } from './ui/card'\nimport { Label } from './ui/label'\n\ntype CustomizerProps = {\n  color: string\n  colorChange: Dispatch<SetStateAction<string>>\n  frameColor: string\n  frameColorChange: Dispatch<SetStateAction<string>>\n  fontColor: string\n  fontColorChange: Dispatch<SetStateAction<string>>\n  image?: string\n  imageChange: Dispatch<SetStateAction<string | undefined>>\n}\n\nexport const Customizer = ({\n  color,\n  colorChange,\n  frameColor,\n  frameColorChange,\n  fontColor,\n  fontColorChange,\n  imageChange,\n}: CustomizerProps) => {\n  // TODO: When image is selected, then color selected, then same image selected image is not update\n  const handleImageChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const file = e.target.files?.[0]\n    if (file) {\n      const imageUrl = URL.createObjectURL(file)\n      imageChange(imageUrl)\n    }\n  }\n  return (\n    <div className=\"w-[350px]\">\n      {' '}\n      <Card>\n        <CardHeader>\n          <CardTitle>Card Title</CardTitle>\n        </CardHeader>\n        <CardContent className=\"space-y-6\">\n          <div className=\"space-y-2\">\n            <Label htmlFor=\"frameColor\">Selected Color</Label>\n            <input\n              type=\"color\"\n              id=\"frameColor\"\n              value={frameColor}\n              onChange={el => frameColorChange(el.target.value)}\n              className=\"w-full h-12 rounded-md border border-gray-300 cursor-pointer\"\n            />\n          </div>\n        </CardContent>\n      </Card>{' '}\n    </div>\n  )\n\n  return (\n    <div className=\"flex flex-col gap-4 w-[300px] p-4 rounded-xl shadow-md bg-white\">\n      {/* Frame Color */}\n      <div className=\"flex items-center gap-3\">\n        <label htmlFor=\"frameColor\" className=\"font-medium text-gray-700\">\n          Frame Color:\n        </label>\n        <input\n          type=\"color\"\n          id=\"frameColor\"\n          value={frameColor}\n          onChange={el => frameColorChange(el.target.value)}\n          className=\"h-8 w-12 border border-gray-300 rounded cursor-pointer\"\n        />\n      </div>\n      {/* Font Color */}\n      <div className=\"flex items-center gap-3\">\n        <label htmlFor=\"fontColor\" className=\"font-medium text-gray-700\">\n          Font Color:\n        </label>\n        <input\n          type=\"color\"\n          id=\"fontColor\"\n          value={fontColor}\n          onChange={el => fontColorChange(el.target.value)}\n          className=\"h-8 w-12 border border-gray-300 rounded cursor-pointer\"\n        />\n      </div>\n      {/* Color Picker */}\n      <div className=\"flex items-center gap-3\">\n        <label htmlFor=\"color\" className=\"font-medium text-gray-700\">\n          Color:\n        </label>\n        <input\n          type=\"color\"\n          id=\"color\"\n          value={color}\n          onChange={el => colorChange(el.target.value)}\n          className=\"h-8 w-12 border border-gray-300 rounded cursor-pointer\"\n        />\n      </div>\n\n      {/* Image Picker */}\n      <div className=\"flex items-center gap-3\">\n        <label htmlFor=\"image\" className=\"font-medium text-gray-700\">\n          Image:\n        </label>\n        <input\n          type=\"file\"\n          id=\"image\"\n          onChange={handleImageChange}\n          className=\"block w-full text-sm text-gray-600\n          file:mr-4 file:py-2 file:px-4\n          file:rounded-full file:border-0\n          file:text-sm file:font-semibold\n          file:bg-blue-50 file:text-blue-700\n          hover:file:bg-blue-100\"\n        />\n      </div>\n    </div>\n  )\n}\n"],"names":[],"mappings":";;;;AAEA;AACA;;;;AAaO,MAAM,aAAa,CAAC,EACzB,KAAK,EACL,WAAW,EACX,UAAU,EACV,gBAAgB,EAChB,SAAS,EACT,eAAe,EACf,WAAW,EACK;IAChB,kGAAkG;IAClG,MAAM,oBAAoB,CAAC;QACzB,MAAM,OAAO,EAAE,MAAM,CAAC,KAAK,EAAE,CAAC,EAAE;QAChC,IAAI,MAAM;YACR,MAAM,WAAW,IAAI,eAAe,CAAC;YACrC,YAAY;QACd;IACF;IACA,qBACE,6WAAC;QAAI,WAAU;;YACZ;0BACD,6WAAC,gIAAA,CAAA,OAAI;;kCACH,6WAAC,gIAAA,CAAA,aAAU;kCACT,cAAA,6WAAC,gIAAA,CAAA,YAAS;sCAAC;;;;;;;;;;;kCAEb,6WAAC,gIAAA,CAAA,cAAW;wBAAC,WAAU;kCACrB,cAAA,6WAAC;4BAAI,WAAU;;8CACb,6WAAC,iIAAA,CAAA,QAAK;oCAAC,SAAQ;8CAAa;;;;;;8CAC5B,6WAAC;oCACC,MAAK;oCACL,IAAG;oCACH,OAAO;oCACP,UAAU,CAAA,KAAM,iBAAiB,GAAG,MAAM,CAAC,KAAK;oCAChD,WAAU;;;;;;;;;;;;;;;;;;;;;;;YAIV;;;;;;;;AAiEd","debugId":null}},
    {"offset": {"line": 802, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 810, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 818, "column": 0}, "map": {"version":3,"sources":["file:///Users/sojimmynea/Developer/js-project/keyboard-customizer-next/src/interfaces/keyboard.type.ts"],"sourcesContent":["export type KeyboardProps = {\n  key: string\n  shiftKey?: string\n  width?: number\n}\n\n// 650 - (4 * 9 (inner gap) = 36px) = 614px\nexport const FUNCTION_KEYS_ROW: KeyboardProps[][] = [\n  // 14 * 40 = 560px\n  [{ key: 'Esc' }],\n  [{ key: 'F1' }, { key: 'F2' }, { key: 'F3' }, { key: 'F4' }],\n  [{ key: 'F5' }, { key: 'F6' }, { key: 'F7' }, { key: 'F8' }],\n  [{ key: 'F9' }, { key: 'F10' }, { key: 'F11' }, { key: 'F12' }],\n\n  [\n    {\n      key: 'F13',\n    },\n  ],\n]\n\n// 620 - gap ( 4 * 13=52px ) = 598px\nconst NUMBER_ROW: KeyboardProps[] = [\n  // 13 * 40 = 520px\n  { key: '`', shiftKey: '~' },\n  { key: '1', shiftKey: '!' },\n  { key: '2', shiftKey: '@' },\n  { key: '3', shiftKey: '#' },\n  { key: '4', shiftKey: '$' },\n  { key: '5', shiftKey: '%' },\n  { key: '6', shiftKey: '^' },\n  { key: '7', shiftKey: '&' },\n  { key: '8', shiftKey: '*' },\n  { key: '9', shiftKey: '(' },\n  { key: '0', shiftKey: ')' },\n  { key: '-', shiftKey: '_' },\n  { key: '=', shiftKey: '+' },\n  { key: 'Backspace', width: 130 - 52 },\n]\n\n// 650 - gap(4 * 13 = 52px)=598px;\nconst QWE_ROW: KeyboardProps[] = [\n  { key: 'Tab', width: 85 - 26 },\n  // 12 * 40 = 480px\n  { key: 'Q' },\n  { key: 'W' },\n  { key: 'E' },\n  { key: 'R' },\n  { key: 'T' },\n  { key: 'Y' },\n  { key: 'U' },\n  { key: 'I' },\n  { key: 'O' },\n  { key: 'P' },\n  { key: '[', shiftKey: '{' },\n  { key: ']', shiftKey: '}' },\n  { key: '\\\\', shiftKey: '|', width: 85 - 26 },\n]\n\n// 650 - gap(4*12 = 48px) = 602px\nconst ASD_ROW: KeyboardProps[] = [\n  { key: 'Caps Lock', width: 95 - 24 },\n  // 440px\n  { key: 'A' },\n  { key: 'S' },\n  { key: 'D' },\n  { key: 'F' },\n  { key: 'G' },\n  { key: 'H' },\n  { key: 'J' },\n  { key: 'K' },\n  { key: 'L' },\n  { key: ';', shiftKey: ':' },\n  { key: \"'\", shiftKey: '\"' },\n\n  { key: 'Enter', width: 115 - 24 },\n]\n\n// 650 - gap (4 * 11 = 44px) = available 606px\nconst ZXCV_ROW: KeyboardProps[] = [\n  { key: 'Shift', width: 115 - 22 },\n  { key: 'Z' },\n  { key: 'X' },\n  { key: 'C' },\n  { key: 'V' },\n  { key: 'B' },\n  { key: 'N' },\n  { key: 'M' },\n  { key: ',', shiftKey: '<' },\n  { key: '.', shiftKey: '>' },\n  { key: '/', shiftKey: '?' },\n  { key: 'Shift', width: 135 - 22 },\n]\n\n// 650 - gap (0.5 * 8 = 4) = 646\nconst MODIFIER_KEYS_ROW: KeyboardProps[] = [\n  // { key: 'Ctrl', width: 100 },\n  // { key: 'Meta', shiftKey: 'Cmd', width: 555 },\n  { key: 'Ctrl', width: 50 },\n  { key: 'Meta', shiftKey: 'Cmd', width: 50 },\n  { key: 'Alt', width: 50 },\n  { key: 'Space', width: 300 - 28 },\n  { key: 'Alt', width: 50 },\n  { key: 'Meta', shiftKey: 'Cmd', width: 50 },\n  { key: 'Menu', width: 50 },\n  { key: 'Ctrl', width: 50 },\n\n  // { key: 'Ctrl', width: 50 },\n  // { key: 'Meta', shiftKey: 'Cmd', width: 50 },\n  // { key: 'Alt', width: 50 },\n  // { key: 'Space', width: 280 },\n  // { key: 'Alt', width: 50 },\n  // { key: 'Meta', shiftKey: 'Cmd', width: 50 },\n  // { key: 'Menu', width: 50 },\n  // { key: 'Ctrl', width: 50 },\n]\n\nexport const KEYBOARD_LAYOUT: KeyboardProps[][] = [\n  NUMBER_ROW,\n  QWE_ROW,\n  ASD_ROW,\n  ZXCV_ROW,\n  MODIFIER_KEYS_ROW,\n]\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1131, "column": 0}, "map": {"version":3,"sources":["file:///Users/sojimmynea/Developer/js-project/keyboard-customizer-next/src/interfaces/index.ts"],"sourcesContent":["export * from './customize.type'\nexport * from './imageClip.type'\nexport * from './keyboard.type'\n"],"names":[],"mappings":";AAAA;AACA;AACA","debugId":null}},
    {"offset": {"line": 1155, "column": 0}, "map": {"version":3,"sources":["file:///Users/sojimmynea/Developer/js-project/keyboard-customizer-next/src/components/keycap.tsx"],"sourcesContent":["import { ImageClipStyle } from '@/interfaces'\nimport { forwardRef, useImperativeHandle, useRef } from 'react'\n\ntype KeycapProps = {\n  keyChar: string\n  shiftKey?: string\n  keyWidth?: number\n\n  xPosition: number\n  yPosition: number\n  keyboardWidth: number\n  keyboardHeight: number\n\n  type: 'color' | 'image'\n}\n\nexport type KeycapRef = {\n  setKeycapColor: (color: string) => void\n  setKeyFontColor: (color: string) => void\n  setKeycapImage: (image: string) => void\n}\n\n// Refactor here to only accept key width and position\nexport const Keycap = forwardRef<KeycapRef, KeycapProps>(\n  (\n    {\n      keyChar,\n      shiftKey,\n      keyWidth,\n      keyboardWidth,\n      keyboardHeight,\n      xPosition,\n      yPosition,\n      type,\n    },\n    ref\n  ) => {\n    const divRef = useRef<HTMLDivElement>(null)\n    useImperativeHandle(ref, () => {\n      return {\n        setKeycapColor: color => {\n          if (divRef.current) {\n            divRef.current.style.backgroundColor = color\n\n            divRef.current.style.backgroundImage = ``\n            divRef.current.style.backgroundSize = ``\n            divRef.current.style.backgroundPosition = ``\n            divRef.current.style.backgroundRepeat = ``\n            divRef.current.style.backgroundClip = ``\n          }\n        },\n        setKeyFontColor: color => {\n          if (divRef.current) {\n            console.log('helllo font???')\n            divRef.current.style.color = color\n          }\n        },\n        setKeycapImage: image => {\n          if (divRef.current) {\n            divRef.current.style.backgroundColor = ''\n            // TODO: Update\n            divRef.current.style.backgroundImage = `url(${image})`\n            divRef.current.style.backgroundSize = `${keyboardWidth}px ${keyboardHeight}px`\n            divRef.current.style.backgroundPosition = `-${xPosition}px -${yPosition}px`\n            divRef.current.style.backgroundRepeat = `no-repeat`\n            divRef.current.style.backgroundClip = `border-box`\n          }\n        },\n      }\n    })\n    return (\n      <div\n        ref={divRef}\n        style={{ width: keyWidth || 40 }}\n        className={`text-xs flex flex-col items-center justify-center border border-gray-400 rounded bg-white font-mono text-black h-[40px] p-1`}\n      >\n        {shiftKey && <div className=\"text-xs leading-none\">{shiftKey}</div>}\n        <div>{keyChar}</div>\n      </div>\n    )\n  }\n)\n"],"names":[],"mappings":";;;;AACA;;;AAsBO,MAAM,uBAAS,CAAA,GAAA,oUAAA,CAAA,aAAU,AAAD,EAC7B,CACE,EACE,OAAO,EACP,QAAQ,EACR,QAAQ,EACR,aAAa,EACb,cAAc,EACd,SAAS,EACT,SAAS,EACT,IAAI,EACL,EACD;IAEA,MAAM,SAAS,CAAA,GAAA,oUAAA,CAAA,SAAM,AAAD,EAAkB;IACtC,CAAA,GAAA,oUAAA,CAAA,sBAAmB,AAAD,EAAE,KAAK;QACvB,OAAO;YACL,gBAAgB,CAAA;gBACd,IAAI,OAAO,OAAO,EAAE;oBAClB,OAAO,OAAO,CAAC,KAAK,CAAC,eAAe,GAAG;oBAEvC,OAAO,OAAO,CAAC,KAAK,CAAC,eAAe,GAAG,EAAE;oBACzC,OAAO,OAAO,CAAC,KAAK,CAAC,cAAc,GAAG,EAAE;oBACxC,OAAO,OAAO,CAAC,KAAK,CAAC,kBAAkB,GAAG,EAAE;oBAC5C,OAAO,OAAO,CAAC,KAAK,CAAC,gBAAgB,GAAG,EAAE;oBAC1C,OAAO,OAAO,CAAC,KAAK,CAAC,cAAc,GAAG,EAAE;gBAC1C;YACF;YACA,iBAAiB,CAAA;gBACf,IAAI,OAAO,OAAO,EAAE;oBAClB,QAAQ,GAAG,CAAC;oBACZ,OAAO,OAAO,CAAC,KAAK,CAAC,KAAK,GAAG;gBAC/B;YACF;YACA,gBAAgB,CAAA;gBACd,IAAI,OAAO,OAAO,EAAE;oBAClB,OAAO,OAAO,CAAC,KAAK,CAAC,eAAe,GAAG;oBACvC,eAAe;oBACf,OAAO,OAAO,CAAC,KAAK,CAAC,eAAe,GAAG,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;oBACtD,OAAO,OAAO,CAAC,KAAK,CAAC,cAAc,GAAG,GAAG,cAAc,GAAG,EAAE,eAAe,EAAE,CAAC;oBAC9E,OAAO,OAAO,CAAC,KAAK,CAAC,kBAAkB,GAAG,CAAC,CAAC,EAAE,UAAU,IAAI,EAAE,UAAU,EAAE,CAAC;oBAC3E,OAAO,OAAO,CAAC,KAAK,CAAC,gBAAgB,GAAG,CAAC,SAAS,CAAC;oBACnD,OAAO,OAAO,CAAC,KAAK,CAAC,cAAc,GAAG,CAAC,UAAU,CAAC;gBACpD;YACF;QACF;IACF;IACA,qBACE,6WAAC;QACC,KAAK;QACL,OAAO;YAAE,OAAO,YAAY;QAAG;QAC/B,WAAW,CAAC,2HAA2H,CAAC;;YAEvI,0BAAY,6WAAC;gBAAI,WAAU;0BAAwB;;;;;;0BACpD,6WAAC;0BAAK;;;;;;;;;;;;AAGZ","debugId":null}},
    {"offset": {"line": 1230, "column": 0}, "map": {"version":3,"sources":["file:///Users/sojimmynea/Developer/js-project/keyboard-customizer-next/src/constants/index.ts"],"sourcesContent":["export const KEYBOARD_WIDTH = 650\nexport const KEYBOARD_HEIGHT = 260\n"],"names":[],"mappings":";;;;AAAO,MAAM,iBAAiB;AACvB,MAAM,kBAAkB","debugId":null}},
    {"offset": {"line": 1242, "column": 0}, "map": {"version":3,"sources":["file:///Users/sojimmynea/Developer/js-project/keyboard-customizer-next/src/components/keyboard.tsx"],"sourcesContent":["import { FUNCTION_KEYS_ROW, KEYBOARD_LAYOUT, KeyboardProps } from '@/interfaces'\nimport { Keycap, KeycapRef } from './keycap'\nimport { KEYBOARD_HEIGHT, KEYBOARD_WIDTH } from '@/constants'\nimport { forwardRef, Ref, useImperativeHandle, useRef } from 'react'\n\ntype KeyboardLayoutProps = {\n  color?: string\n  frameColor: string\n  fontColor: string\n  image?: string\n  type: 'color' | 'image'\n  ref: Ref<HTMLDivElement>\n}\n\nconst FUNCTION_KEYS_ROW_WITH_POSITION: {\n  key: KeyboardProps\n  x: number\n  y: number\n}[][] = []\n\nlet xOffset = 0\nfor (let idx = 0; idx < FUNCTION_KEYS_ROW.length; idx++) {\n  const row = FUNCTION_KEYS_ROW[idx]\n  const resultRow: { key: KeyboardProps; x: number; y: number }[] = []\n\n  for (let innerIdx = 0; innerIdx < row.length; innerIdx++) {\n    const key = row[innerIdx]\n    const keyWidth = key.width || 40\n\n    resultRow.push({\n      key,\n      x: xOffset,\n      y: 0,\n    })\n\n    xOffset += keyWidth\n    if (innerIdx !== row.length - 1) {\n      xOffset += 4 // gap between keys\n    }\n  }\n\n  FUNCTION_KEYS_ROW_WITH_POSITION.push(resultRow)\n\n  if (idx !== FUNCTION_KEYS_ROW.length - 1) {\n    xOffset += 14 // gap between rows\n  }\n}\n\nconst KEYBORD_LAYOUT_WITH_POSITION = KEYBOARD_LAYOUT.map((row, rowIndex) => {\n  let xOffset = 0\n  return row.map((key, idx) => {\n    const keyWidth = key.width || 40\n    const pos = { x: xOffset, y: (rowIndex + 1) * 40 }\n    xOffset += keyWidth + 4\n    return { key, ...pos }\n  })\n})\n\nexport interface KeyboardLayoutRef {\n  setFrameColor: (color: string) => void\n  setKeycapColor: (color: string) => void\n  setFontColor: (color: string) => void\n  setImage: (image: string) => void\n}\n\nexport const KeyboardLayout = forwardRef<\n  KeyboardLayoutRef,\n  KeyboardLayoutProps\n>(({ type }, ref) => {\n  const frameColorRef = useRef<HTMLDivElement>(null)\n  const keycapRefs = useRef<(KeycapRef | null)[]>([])\n\n  useImperativeHandle(ref, () => {\n    return {\n      setFrameColor: color => {\n        console.log('setting frame color')\n        if (frameColorRef.current) {\n          frameColorRef.current.style.backgroundColor = color\n        }\n      },\n      setFontColor: color => {\n        for (const ref of keycapRefs.current) {\n          if (ref) {\n            ref.setKeyFontColor(color)\n          }\n        }\n      },\n      setKeycapColor: color => {\n        for (const ref of keycapRefs.current) {\n          if (ref) {\n            ref.setKeycapColor(color)\n          }\n        }\n      },\n      setImage: image => {\n        for (const ref of keycapRefs.current) {\n          if (ref) {\n            ref.setKeycapImage(image)\n          }\n        }\n      },\n    }\n  })\n\n  return (\n    <div className=\"flex flex-col items-center justify-center\">\n      {/* Keyboard Frame Container */}\n      <div\n        className=\"flex flex-col gap-1 w-[666px] p-2 bg-gray-800 border-gray-700 rounded-2xl shadow-xl\"\n        ref={frameColorRef}\n      >\n        {/* Function Key Row */}\n        <div className=\"w-full justify-between flex gap-3.5\">\n          {FUNCTION_KEYS_ROW_WITH_POSITION.map((row, index) => (\n            <div className=\"w-full flex justify-between gap-1\" key={index}>\n              {row.map((keyWithPos, innerIndex) => {\n                return (\n                  <Keycap\n                    key={innerIndex}\n                    ref={el => {\n                      keycapRefs.current.push(el)\n                    }}\n                    xPosition={keyWithPos.x}\n                    yPosition={keyWithPos.y}\n                    keyboardWidth={KEYBOARD_WIDTH}\n                    keyboardHeight={KEYBOARD_HEIGHT}\n                    type={type}\n                    shiftKey={keyWithPos.key.shiftKey}\n                    keyChar={keyWithPos.key.key}\n                    keyWidth={keyWithPos.key.width}\n                  />\n                )\n              })}\n            </div>\n          ))}\n        </div>\n\n        {/* Main Keyboard Rows */}\n        {KEYBORD_LAYOUT_WITH_POSITION.map((row, innerIndex) => {\n          return (\n            <div key={innerIndex} className=\"w-full justify-between flex gap-1\">\n              {row.map((keyWithPos, innerIndex) => {\n                return (\n                  <Keycap\n                    key={innerIndex}\n                    type={type}\n                    ref={el => {\n                      keycapRefs.current.push(el)\n                    }}\n                    shiftKey={keyWithPos.key.shiftKey}\n                    keyChar={keyWithPos.key.key}\n                    keyWidth={keyWithPos.key.width}\n                    xPosition={keyWithPos.x}\n                    yPosition={keyWithPos.y}\n                    keyboardWidth={KEYBOARD_WIDTH}\n                    keyboardHeight={KEYBOARD_HEIGHT}\n                  />\n                )\n              })}\n            </div>\n          )\n        })}\n      </div>\n    </div>\n  )\n})\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1415, "column": 0}, "map": {"version":3,"sources":["file:///Users/sojimmynea/Developer/js-project/keyboard-customizer-next/src/components/index.ts"],"sourcesContent":["export * from './color-picker'\nexport * from './customizer'\nexport * from './keyboard'\n"],"names":[],"mappings":";AAAA;AACA;AACA","debugId":null}},
    {"offset": {"line": 1439, "column": 0}, "map": {"version":3,"sources":["file:///Users/sojimmynea/Developer/js-project/keyboard-customizer-next/src/app/page.tsx"],"sourcesContent":["'use client'\nimport {\n  Customizer,\n  KeyboardLayout,\n  ColorPicker,\n  KeyboardLayoutRef,\n} from '@/components'\nimport { Button } from '@/components/ui/button'\nimport {\n  Card,\n  CardAction,\n  CardContent,\n  CardDescription,\n  CardFooter,\n  CardHeader,\n  CardTitle,\n} from '@/components/ui/card'\nimport { useKeyboardStyleApplier } from '@/hooks'\nimport { useRef, useState } from 'react'\n\nexport default function Home() {\n  const [type, setType] = useState<'color' | 'image'>('color')\n  const {\n    color,\n    setColor,\n    image,\n    setImage,\n    frameColor,\n    setFrameColor,\n    fontColor,\n    setFontColor,\n  } = useKeyboardStyleApplier(setType)\n\n  const keyboardLayoutRef = useRef<KeyboardLayoutRef | null>(null)\n  return (\n    <>\n      <div>\n        <Card>\n          <CardHeader>\n            <CardTitle>Custmoize Section</CardTitle>\n          </CardHeader>\n          <CardContent>\n            <p>Card Content</p>\n          </CardContent>\n          <CardFooter>\n            <p>Card Footer</p>\n          </CardFooter>\n        </Card>\n      </div>\n\n      <div className=\"w-11/12 mx-auto flex justify-between mt-5\">\n        <ColorPicker keyboardLayoutRef={keyboardLayoutRef} />\n        <KeyboardLayout\n          ref={keyboardLayoutRef}\n          frameColor={frameColor}\n          image={image}\n          color={color}\n          fontColor={fontColor}\n          type={type}\n        />\n      </div>\n    </>\n  )\n}\n"],"names":[],"mappings":";;;;AACA;AAAA;AAAA;AAOA;AASA;AAAA;AACA;AAlBA;;;;;;AAoBe,SAAS;IACtB,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAA,GAAA,oUAAA,CAAA,WAAQ,AAAD,EAAqB;IACpD,MAAM,EACJ,KAAK,EACL,QAAQ,EACR,KAAK,EACL,QAAQ,EACR,UAAU,EACV,aAAa,EACb,SAAS,EACT,YAAY,EACb,GAAG,CAAA,GAAA,uIAAA,CAAA,0BAAuB,AAAD,EAAE;IAE5B,MAAM,oBAAoB,CAAA,GAAA,oUAAA,CAAA,SAAM,AAAD,EAA4B;IAC3D,qBACE;;0BACE,6WAAC;0BACC,cAAA,6WAAC,gIAAA,CAAA,OAAI;;sCACH,6WAAC,gIAAA,CAAA,aAAU;sCACT,cAAA,6WAAC,gIAAA,CAAA,YAAS;0CAAC;;;;;;;;;;;sCAEb,6WAAC,gIAAA,CAAA,cAAW;sCACV,cAAA,6WAAC;0CAAE;;;;;;;;;;;sCAEL,6WAAC,gIAAA,CAAA,aAAU;sCACT,cAAA,6WAAC;0CAAE;;;;;;;;;;;;;;;;;;;;;;0BAKT,6WAAC;gBAAI,WAAU;;kCACb,6WAAC,qIAAA,CAAA,cAAW;wBAAC,mBAAmB;;;;;;kCAChC,6WAAC,8HAAA,CAAA,iBAAc;wBACb,KAAK;wBACL,YAAY;wBACZ,OAAO;wBACP,OAAO;wBACP,WAAW;wBACX,MAAM;;;;;;;;;;;;;;AAKhB","debugId":null}}]
}